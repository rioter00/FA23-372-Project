//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""gameplay"",
            ""id"": ""f6b5237d-5e48-49aa-8b2d-e4db1bda50c9"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""d1da0337-2b91-454d-b6ca-d0117bd48f71"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""0cd1156d-6863-4ab9-8e35-86dc16d99357"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Gun_Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""5ad1aaa5-3238-497f-afb4-a6ac025b6493"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun_Reload"",
                    ""type"": ""Button"",
                    ""id"": ""f046b37f-47f3-4709-8b8e-933cba161ed1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun_Powder"",
                    ""type"": ""Button"",
                    ""id"": ""e03df666-63b2-47b2-8937-131e488d3035"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun_Bullet"",
                    ""type"": ""Button"",
                    ""id"": ""306d264f-be23-40bc-a0f2-b2799c3d3376"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun_Tamp"",
                    ""type"": ""Button"",
                    ""id"": ""81352eae-e95e-4233-bc64-fa5b45f974c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""7881af78-2fd1-4931-bea0-1c623725d6cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c211e408-3548-4aec-baae-fb5dba301731"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6080ee11-9808-4485-b5da-9de5f6c6f8e3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""16dd468c-67e5-46c0-99e9-d32c166d0c1b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ebc30e9a-4f38-427f-8933-b41817788e63"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5653c115-ab7a-485c-ba66-85458d01d5e0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ccf5f091-b479-4a4b-9026-965863800dea"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6af73b6-0d2d-403d-9b8e-3eb995b4216d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun_Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ad65420-f9cc-4659-b913-2e45a4a0ad78"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun_Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dec9b14c-42bf-424c-8053-0f516b49e0e2"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun_Tamp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90fff6a2-22f3-4bd4-bd8e-0446a3fbc186"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun_Powder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c3b69d1-eb12-4dc5-95a1-1809903051de"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Gun_Bullet"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23abee6b-380a-42fe-be57-44e6a45077e1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // gameplay
        m_gameplay = asset.FindActionMap("gameplay", throwIfNotFound: true);
        m_gameplay_Movement = m_gameplay.FindAction("Movement", throwIfNotFound: true);
        m_gameplay_Mouse = m_gameplay.FindAction("Mouse", throwIfNotFound: true);
        m_gameplay_Gun_Shoot = m_gameplay.FindAction("Gun_Shoot", throwIfNotFound: true);
        m_gameplay_Gun_Reload = m_gameplay.FindAction("Gun_Reload", throwIfNotFound: true);
        m_gameplay_Gun_Powder = m_gameplay.FindAction("Gun_Powder", throwIfNotFound: true);
        m_gameplay_Gun_Bullet = m_gameplay.FindAction("Gun_Bullet", throwIfNotFound: true);
        m_gameplay_Gun_Tamp = m_gameplay.FindAction("Gun_Tamp", throwIfNotFound: true);
        m_gameplay_Dash = m_gameplay.FindAction("Dash", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // gameplay
    private readonly InputActionMap m_gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_gameplay_Movement;
    private readonly InputAction m_gameplay_Mouse;
    private readonly InputAction m_gameplay_Gun_Shoot;
    private readonly InputAction m_gameplay_Gun_Reload;
    private readonly InputAction m_gameplay_Gun_Powder;
    private readonly InputAction m_gameplay_Gun_Bullet;
    private readonly InputAction m_gameplay_Gun_Tamp;
    private readonly InputAction m_gameplay_Dash;
    public struct GameplayActions
    {
        private @PlayerInputActions m_Wrapper;
        public GameplayActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_gameplay_Movement;
        public InputAction @Mouse => m_Wrapper.m_gameplay_Mouse;
        public InputAction @Gun_Shoot => m_Wrapper.m_gameplay_Gun_Shoot;
        public InputAction @Gun_Reload => m_Wrapper.m_gameplay_Gun_Reload;
        public InputAction @Gun_Powder => m_Wrapper.m_gameplay_Gun_Powder;
        public InputAction @Gun_Bullet => m_Wrapper.m_gameplay_Gun_Bullet;
        public InputAction @Gun_Tamp => m_Wrapper.m_gameplay_Gun_Tamp;
        public InputAction @Dash => m_Wrapper.m_gameplay_Dash;
        public InputActionMap Get() { return m_Wrapper.m_gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Mouse.started += instance.OnMouse;
            @Mouse.performed += instance.OnMouse;
            @Mouse.canceled += instance.OnMouse;
            @Gun_Shoot.started += instance.OnGun_Shoot;
            @Gun_Shoot.performed += instance.OnGun_Shoot;
            @Gun_Shoot.canceled += instance.OnGun_Shoot;
            @Gun_Reload.started += instance.OnGun_Reload;
            @Gun_Reload.performed += instance.OnGun_Reload;
            @Gun_Reload.canceled += instance.OnGun_Reload;
            @Gun_Powder.started += instance.OnGun_Powder;
            @Gun_Powder.performed += instance.OnGun_Powder;
            @Gun_Powder.canceled += instance.OnGun_Powder;
            @Gun_Bullet.started += instance.OnGun_Bullet;
            @Gun_Bullet.performed += instance.OnGun_Bullet;
            @Gun_Bullet.canceled += instance.OnGun_Bullet;
            @Gun_Tamp.started += instance.OnGun_Tamp;
            @Gun_Tamp.performed += instance.OnGun_Tamp;
            @Gun_Tamp.canceled += instance.OnGun_Tamp;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Mouse.started -= instance.OnMouse;
            @Mouse.performed -= instance.OnMouse;
            @Mouse.canceled -= instance.OnMouse;
            @Gun_Shoot.started -= instance.OnGun_Shoot;
            @Gun_Shoot.performed -= instance.OnGun_Shoot;
            @Gun_Shoot.canceled -= instance.OnGun_Shoot;
            @Gun_Reload.started -= instance.OnGun_Reload;
            @Gun_Reload.performed -= instance.OnGun_Reload;
            @Gun_Reload.canceled -= instance.OnGun_Reload;
            @Gun_Powder.started -= instance.OnGun_Powder;
            @Gun_Powder.performed -= instance.OnGun_Powder;
            @Gun_Powder.canceled -= instance.OnGun_Powder;
            @Gun_Bullet.started -= instance.OnGun_Bullet;
            @Gun_Bullet.performed -= instance.OnGun_Bullet;
            @Gun_Bullet.canceled -= instance.OnGun_Bullet;
            @Gun_Tamp.started -= instance.OnGun_Tamp;
            @Gun_Tamp.performed -= instance.OnGun_Tamp;
            @Gun_Tamp.canceled -= instance.OnGun_Tamp;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnGun_Shoot(InputAction.CallbackContext context);
        void OnGun_Reload(InputAction.CallbackContext context);
        void OnGun_Powder(InputAction.CallbackContext context);
        void OnGun_Bullet(InputAction.CallbackContext context);
        void OnGun_Tamp(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
}
